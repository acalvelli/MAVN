[{"/Users/nathanyu/CS/SWE/MAVN/client/src/index.js":"1","/Users/nathanyu/CS/SWE/MAVN/client/src/App.js":"2","/Users/nathanyu/CS/SWE/MAVN/client/src/reportWebVitals.js":"3","/Users/nathanyu/CS/SWE/MAVN/client/src/components/ResponsiveAppBar/index.js":"4","/Users/nathanyu/CS/SWE/MAVN/client/src/pages/index.js":"5","/Users/nathanyu/CS/SWE/MAVN/client/src/components/SignInPage/index.js":"6"},{"size":500,"mtime":1645218560559,"results":"7","hashOfConfig":"8"},{"size":408,"mtime":1645729685569,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1645215186171,"results":"10","hashOfConfig":"8"},{"size":5135,"mtime":1645729792302,"results":"11","hashOfConfig":"8"},{"size":337,"mtime":1645728573101,"results":"12","hashOfConfig":"8"},{"size":4159,"mtime":1645729682091,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1sizf2g",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nathanyu/CS/SWE/MAVN/client/src/index.js",[],[],["38","39"],"/Users/nathanyu/CS/SWE/MAVN/client/src/App.js",["40"],[],"import './App.css';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\nimport SignIn from './components/SignInPage';\nimport Home from './pages';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route exact path='/' exact element={<SignIn />} />\n        <Route path=\"/home/*\" element={<Home />} />\n      </Routes>\n    </Router>\n    \n  );\n}\n\nexport default App;\n",["41","42"],"/Users/nathanyu/CS/SWE/MAVN/client/src/reportWebVitals.js",[],[],"/Users/nathanyu/CS/SWE/MAVN/client/src/components/ResponsiveAppBar/index.js",["43"],[],"import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport { Link } from 'react-router-dom';\n\n\nconst pages = ['Join', 'Create'];\nconst settings = ['Profile', 'Account', 'Dashboard', 'Logout'];\n\n\n\n\nconst ResponsiveAppBar = () => {\n\n  \n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n    console.log(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleMenuClick = (page) => {\n    console.log(\"u clicked a button: \" + page);\n  }\n\n  const handleSettingsClick = (setting) => {\n    console.log(\"u clicked a setting button: \" + setting);\n  }\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  return (\n    <AppBar position=\"static\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\n          >\n          <Link to=\"/home\" style={{ textDecoration: 'none' }}>\n            MOVIE MASTER\n          </Link>\n          </Typography>\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleOpenNavMenu}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorElNav}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n              }}\n              open={Boolean(anchorElNav)}\n              onClose={handleCloseNavMenu}\n              sx={{\n                display: { xs: 'block', md: 'none' },\n              }}\n            >\n              {pages.map((page) => (\n                <MenuItem key={page} onClick={handleCloseNavMenu}>\n                  <Typography textAlign=\"center\">{page}</Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}\n          >\n            MOVIE MASTER\n          </Typography>\n          {/* dynamic buttons for const pages routing here */}\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n            {pages.map((page) => (\n              <Link key={page} to={`${page.toLowerCase()}`} style={{ textDecoration: 'none' }}>\n                <Button\n                  onClick={() => {handleMenuClick(page)}}\n                  sx={{ my: 2, color: 'white', display: 'block' }}\n                >\n                  {page}\n                </Button>\n              </Link>   \n                ))}\n          </Box>\n\n          <Box sx={{ flexGrow: 0 }}>\n            <Tooltip title=\"Open settings\">\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n                <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" />\n              </IconButton>\n            </Tooltip>\n            <Menu\n              sx={{ mt: '45px' }}\n              id=\"menu-appbar\"\n              anchorEl={anchorElUser}\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              open={Boolean(anchorElUser)}\n              onClose={handleCloseUserMenu}\n            >\n            {/* dynamic buttons for const settings links here */}\n              {settings.map((setting) => (\n                <Link key={setting} to ={`${setting.toLowerCase()}`} style={{ textDecoration: 'none' }}>\n                  <MenuItem key={setting} onClick={handleCloseUserMenu}>\n                    <Typography textAlign=\"center\">{setting}</Typography>\n                  </MenuItem>\n                </Link>\n              ))}\n            </Menu>\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\nexport default ResponsiveAppBar;\n","/Users/nathanyu/CS/SWE/MAVN/client/src/pages/index.js",["44","45"],[],"import React from 'react';\nimport ResponsiveAppBar from '../components/ResponsiveAppBar';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\n  \nfunction Home() {\n  return (\n  <React.Fragment>\n    <ResponsiveAppBar />\n    <Routes>\n      \n    </Routes>\n  </React.Fragment>\n    \n  );\n};\n  \nexport default Home;",["46","47"],"/Users/nathanyu/CS/SWE/MAVN/client/src/components/SignInPage/index.js",[],[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":15,"column":31,"nodeType":"54","messageId":"55","endLine":15,"endColumn":36},{"ruleId":"48","replacedBy":"56"},{"ruleId":"50","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":45,"column":9,"nodeType":"60","messageId":"61","endLine":45,"endColumn":28},{"ruleId":"58","severity":1,"message":"62","line":4,"column":20,"nodeType":"60","messageId":"61","endLine":4,"endColumn":26},{"ruleId":"58","severity":1,"message":"63","line":6,"column":3,"nodeType":"60","messageId":"61","endLine":6,"endColumn":8},{"ruleId":"48","replacedBy":"64"},{"ruleId":"50","replacedBy":"65"},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps",["66"],["67"],"no-unused-vars","'handleSettingsClick' is assigned a value but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Route' is defined but never used.",["66"],["67"],"no-global-assign","no-unsafe-negation"]